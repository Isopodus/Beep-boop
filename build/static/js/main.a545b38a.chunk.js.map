{"version":3,"sources":["components/Header.js","api.js","components/Card.js","components/History.js","components/Introduction.js","components/RecognitionResponse.js","components/Result.js","components/Content.js","components/Spinner.js","App.js","index.js","img/red_vinyl.png","img/yellow_vinyl.png","img/blue_vinyl.png","img/introduction.png","img/search.png","img/audio.png","img/text.png"],"names":["vinyls","redVinul","yellowVinyl","blueVinyl","sort","Math","random","Header","className","src","alt","token","api","sendAudio","fileFormData","append","axios","post","sendText","text","get","params","q","api_token","generalizeResponse","response","result","media","error","Array","forEach","obj","JSON","parse","map","m","provider","type","url","push","artist","title","youtube","link","status","Card","props","state","record","playing","popUp","startRecording","bind","stopRecording","toggleListening","handleFile","handleText","this","setState","updateFile","setTimeout","e","target","files","size","value","updateBlob","updateText","file","blob","File","lastModified","Date","formData","FormData","toggleSpinner","then","data","generalized","updateSong","length","catch","console","log","imgUrl","accent","case","name","onClick","String","fromCharCode","colSpan","width","height","blobURL","onEnded","style","marginBottom","display","margin","htmlFor","visibility","id","accept","onChange","onStop","open","modal","close","placeholder","rows","React","Component","connect","possibleSong","dispatch","song","cookies","Cookie","History","songs","games","slice","reverse","sound","index","currentSongPlaying","key","textAlign","color","paddingRight","config","playerVars","showinfo","onStart","game","introduction","trigger","onOpen","document","body","overflow","onClose","RecognitionResponse","bufCookie","set","playButton","endUrl","wrongAnswer","rightAnswer","search","Result","userScore","computerScore","computerWon","shift","remove","prevState","sounds","playList","every","finishGame","getElementById","userWon","attempts","description","audio","Content","cards","arrows","dots","infinite","speed","slidesToShow","slidesToScroll","spinner","App","initState","store","createStore","action","window","scrollBy","top","offsetHeight","behavior","temp","ReactDOM","render","module","exports"],"mappings":"maAOMA,G,MAAS,CAACC,IAAUC,IAAaC,MAIvCH,EAAOI,MAHP,WACI,OAAOC,KAAKC,SAAW,MAeZC,MAXf,WACI,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,WAAWC,IAAKT,EAAO,GAAIU,IAAI,KAC9C,yBAAKF,UAAU,WAAWC,IAAKT,EAAO,GAAIU,IAAI,KAC9C,yBAAKF,UAAU,YAAYC,IAAKT,EAAO,GAAIU,IAAI,KAC/C,0C,8FClBNC,EAAQ,mCA2ECC,EA1EH,CACRC,UAAW,SAACC,GAER,OADAA,EAAaC,OAAO,YAAaJ,GAC1BK,IAAMC,KAAK,uBAAwBH,IAE9CI,SAAU,SAACC,GACP,OAAOH,IAAMI,IAAI,kCAAmC,CAChDC,OAAQ,CACJC,EAAGH,EACHI,UAAWZ,MAIvBa,mBAAoB,SAACC,GACjB,IAAIC,EAAS,GACTC,EAAQ,GACZ,GAAM,UAAWF,EA8Cb,MAAO,CACH,OAAU,QACV,MAASA,EAASG,OA/CtB,GAAIH,EAASC,kBAAkBG,MAC3BJ,EAASC,OAAOI,SAAQ,SAAAC,GAGhBJ,EAFA,UAAWI,GAAqB,KAAdA,EAAIJ,OACtBA,EAAQK,KAAKC,MAAMF,EAAIJ,QACTO,KAAI,SAAAC,GACd,MAAO,CACH,SAAYA,EAAEC,SACd,KAAQD,EAAEE,KACV,IAAOF,EAAEG,QAKT,CAAC,CACL,SAAYP,EAAIJ,MAAMS,SACtB,KAAQL,EAAIJ,MAAMU,KAClB,IAAON,EAAIJ,MAAMW,MAGzBZ,EAAOa,KAAK,CACR,OAAUR,EAAIS,OACd,MAAST,EAAIU,MACb,MAASd,WAIhB,KAAIF,EAASC,OAYd,MAAO,CACH,OAAU,UACV,OAAU,MAbdA,EAAS,CAAC,CACN,OAAW,WAAYD,EAASC,OAAUD,EAASC,OAAOc,OAAS,KACnE,MAASf,EAASC,OAAOe,MACzB,MAAU,UAAWhB,EAASC,QAAoC,KAA1BD,EAASC,OAAOC,MAAgBK,KAAKC,MAAMR,EAASC,OAAOC,OAAS,CAAC,CACzG,SAAY,UACZ,KAAQ,QACR,IAAQ,YAAaF,EAASC,OAAUD,EAASC,OAAOgB,QAAQC,KAAO,SAiBvF,MAAO,CACH,OAAUlB,EAASmB,OACnB,OAAUlB,KC/DhBmB,G,mBACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,QAAQ,EACRC,SAAS,EACTC,OAAO,GAGX,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAClB,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBAClB,EAAKvC,UAAY,EAAKA,UAAUuC,KAAf,gBACjB,EAAKlC,SAAW,EAAKA,SAASkC,KAAd,gBAdD,E,+EAkBfK,KAAKC,SAAS,CACVT,SAAUQ,KAAKV,MAAME,Y,uCAKzBQ,KAAKX,MAAMa,WAAW,MACtBF,KAAKC,SAAS,CACVV,QAAQ,IAEZY,WAAW,WACPH,KAAKJ,iBACPD,KAAKK,MAAO,O,sCAIdA,KAAKC,SAAS,CACVV,QAAQ,M,iCAILa,GACHA,EAAEC,OAAOC,MAAM,GAAGC,KAAO,UACzBH,EAAEC,OAAOG,MAAQ,KACjBR,KAAKX,MAAMa,YAAW,GACtBF,KAAKX,MAAMoB,WAAW,MACtBT,KAAKC,SAAS,CAAER,OAAO,MAGvBO,KAAKX,MAAMa,WAAWE,EAAEC,OAAOC,MAAM,IACrCN,KAAKX,MAAMoB,WAAW,S,iCAInBL,GACPJ,KAAKX,MAAMqB,WAAWN,EAAEC,OAAOG,S,kCAGtB,IAAD,OACJG,EAAOX,KAAKX,MAAMsB,KAItB,IAHKA,GAAQX,KAAKX,MAAMuB,OACpBD,EAAO,IAAIE,KAAK,CAACb,KAAKX,MAAMuB,KAAKA,MAAO,aAAc,CAAEE,aAAc,IAAIC,KAAQnC,KAAM,eAEvFoB,KAAKX,MAAMuB,MAASZ,KAAKX,MAAMsB,KAApC,CAGA,IAAIK,EAAW,IAAIC,SACnBD,EAAS1D,OAAO,OAAQqD,GACxBX,KAAKX,MAAM6B,gBACX/D,EAAIC,UAAU4D,GACTG,MAAK,SAACnD,GACH,GAAwB,MAApBA,EAASmB,QAA2C,YAAzBnB,EAASoD,KAAKjC,OAAsB,CAC/D,IAAIkC,EAAclE,EAAIY,mBAAmBC,EAASoD,MAClD,EAAK/B,MAAMiC,cAAWD,EAAYpD,QAAUoD,EAAYpD,OAAOsD,OAAS,IAAIF,EAAYpD,OAAO,IAC/F,EAAKoB,MAAM6B,qBAEX,EAAKjB,SAAS,CAAER,OAAO,IACvB,EAAKJ,MAAM6B,mBAGlBM,OAAM,SAACrD,GACJsD,QAAQC,IAAIvD,S,iCAIZ,IAAD,OACiB,KAApB6B,KAAKX,MAAM3B,OACXsC,KAAKX,MAAM6B,gBACX/D,EAAIM,SAASuC,KAAKX,MAAM3B,MACnByD,MAAK,SAACnD,GACH,GAAwB,MAApBA,EAASmB,QAA2C,YAAzBnB,EAASoD,KAAKjC,OAAsB,CAC/D,IAAIkC,EAAclE,EAAIY,mBAAmBC,EAASoD,MAClD,EAAK/B,MAAMiC,cAAWD,EAAYpD,QAAUoD,EAAYpD,OAAOsD,OAAS,IAAIF,EAAYpD,OAAO,IAC/F,EAAKoB,MAAM6B,qBAGX,EAAKjB,SAAS,CAAER,OAAO,IACvB,EAAKJ,MAAM6B,mBAGlBM,OAAM,SAACrD,GACJsD,QAAQC,IAAIvD,S,+BAMlB,IAAD,OACL,OACI,yBAAKpB,UAAU,QACX,yBAAKC,IAAKgD,KAAKX,MAAMsC,OAAQ1E,IAAI,KACjC,uBAAGF,UAAU,WAAWiD,KAAKX,MAAML,MAAnC,IAA0C,6BAA1C,IAAiD,8BAAOgB,KAAKX,MAAMuC,SAEnE,yBAAK7E,UAAU,eACViD,KAAKX,MAAMwC,KACR,6BACI,+BACI,+BACwB,MAAnB7B,KAAKX,MAAMsB,KAAgB,oCACxB,4BAAI,6EACJ,4BACI,wBAAI5D,UAAU,cACTiD,KAAKX,MAAMsB,KAAOX,KAAKX,MAAMsB,KAAKmB,KAAO,iLAC1C,yBACAC,QAAS,kBAAM,EAAK1C,MAAMa,WAAW,OACrCnD,UAAU,UAELiF,OAAOC,aAAa,SAI7BjC,KAAKX,MAAMuB,KAAQ,oCACvB,4BACI,wBAAIsB,QAAQ,KAAZ,qDAEI,kBAAC,IAAD,CACIC,MAAM,IACNC,OAAO,IACPrF,UAAU,SACV8B,IAAKmB,KAAKX,MAAMuB,KAAKyB,QACrB7C,QAASQ,KAAKV,MAAME,QACpB8C,QAAS,kBAAM,EAAKrC,SAAS,CAAET,SAAS,SAGpD,wBAAI+C,MAAO,CAAEC,aAAc,KAAM,4BAC7B,yBAAKT,QAAS/B,KAAKH,gBAAiB9C,UAAU,QACxCiD,KAAKV,MAAME,QAAUwC,OAAOC,aAAa,MAAQD,OAAOC,aAAa,OAE3E,uBAAGM,MAAO,CAAEE,QAAS,eAAgBC,OAAQ,IAA7C,yFACA,yBAAKX,QAAS,kBAAM,EAAK1C,MAAMoB,WAAW,OAAO1D,UAAU,UACtDiF,OAAOC,aAAa,SAGzB,oCACJ,4BACI,0GACA,2IAEJ,4BACI,4BACI,2BAAOlF,UAAU,UAAU4F,QAAQ,SAAnC,sEACA,2BACIJ,MAAO,CAAEK,WAAY,SAAUH,QAAS,QACxCI,GAAG,QACHjE,KAAK,OACLkE,OAAO,UACPhB,KAAK,OACLiB,SAAU/C,KAAKF,cAGvB,4BACI,kBAAC,IAAD,CACIP,OAAQS,KAAKV,MAAMC,OACnBxC,UAAU,QACViG,OAAQ,SAACpC,GAAD,OAAU,EAAKvB,MAAMoB,WAAWG,IACxCuB,MAAO,EAAGC,OAAQ,IACtB,4BACIL,QAAS/B,KAAKV,MAAMC,OAASS,KAAKJ,cAAgBI,KAAKN,eACvDd,KAAK,SACL7B,UAAWiD,KAAKV,MAAMC,OAAS,mBAAqB,WAEnDS,KAAKV,MAAMC,OAAS,2BAAS,uEAElC,yBAAKxC,UAAU,iBAMvC,kBAAC,IAAD,CAAOkG,KAAMjD,KAAKV,MAAMG,MAAOyD,OAAK,IAC/B,SAAAC,GAAK,OACF,oCACI,uVACA,4BAAQpG,UAAU,UAAUgF,QAAS,WACjCoB,IACA,EAAKlD,SAAS,CAAER,OAAO,MAF3B,0DAWR,6BACI,8BAAUoD,GAAG,YAAYE,SAAU/C,KAAKD,WAAYqD,YAAa,kCAAmCC,KAAM,MAClH,kBAAC,IAAD,CAAOJ,KAAMjD,KAAKV,MAAMG,MAAOyD,OAAK,IAC/B,SAAAC,GAAK,OACF,oCACI,8MACA,4BAAQpG,UAAU,UAAUgF,QAAS,WACjCoB,IACA,EAAKlD,SAAS,CAAER,OAAO,MAF3B,2DAapB,yBAAK1C,UAAU,aACX,2BAAOA,UAAU,WAAW6B,KAAK,SAASkD,KAAK,SAAStB,MAAM,yDAC1DuB,QAAS/B,KAAKX,MAAMwC,KAAO7B,KAAK5C,UAAY4C,KAAKvC,iB,GAhOtD6F,IAAMC,YA0PVC,mBATf,SAAyBlE,GACrB,MAAO,CACHsB,KAAMtB,EAAMsB,KACZD,KAAMrB,EAAMqB,KACZjD,KAAM4B,EAAM5B,KACZ+F,aAAcnE,EAAMmE,iBAf5B,SAA4BC,GACxB,MAAO,CACHjD,WAAY,SAACG,GAAD,OAAU8C,EAAS,CAAE9E,KAAM,cAAegC,KAAMA,KAC5DV,WAAY,SAACS,GAAD,OAAU+C,EAAS,CAAE9E,KAAM,cAAe+B,KAAMA,KAC5DD,WAAY,SAAChD,GAAD,OAAUgG,EAAS,CAAE9E,KAAM,cAAelB,KAAMA,KAC5D4D,WAAY,SAACqC,GAAD,OAAUD,EAAS,CAAE9E,KAAM,cAAe+E,KAAMA,KAC5DzC,cAAe,kBAAMwC,EAAS,CAAE9E,KAAM,uBAa/B4E,CAA6CpE,GC3PtDwE,G,OAAU,IAAIC,KAEdC,E,YACF,WAAYzE,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTE,SAAS,EACTX,IAAK,MAJM,E,sEAOT,IAAD,OACDkF,EAAQH,EAAQjG,IAAI,WACpBqG,EAAQ,KAqCZ,OApCGD,IACCC,EAAQD,EAAME,MAAM,GAAGC,UAAUzF,KAAI,SAAC0F,EAAOC,GACzC,IAAIC,GAAqB,EAIzB,OAHIF,GAASA,EAAMjG,MAAMqD,OAAS,GAAK,EAAKjC,MAAMT,MAAQsF,EAAMjG,MAAM,GAAGW,MACrEwF,GAAqB,GAElB,wBAAIC,IAAKF,GACZ,4BAAKL,EAAMxC,OAAS6C,GACpB,wBAAIrH,UAAU,YAAYwF,MAAO,CAAEgC,UAAW,SAAWJ,GAASA,EAAMjG,MAAMqD,OAAS,GAAiC,YAA5B4C,EAAMjG,MAAM,GAAGS,SAC3G,yBAAK5B,UAAU,OAAOgF,QAAS,WACvB,EAAK9B,SAAS,CACVT,SAAU,EAAKF,MAAME,UAEzB,EAAKS,SAAS,CAACpB,IAAKsF,EAAMjG,MAAM,GAAGW,QAEjCwF,GAAsB,EAAK/E,MAAME,QAAUwC,OAAOC,aAAa,MAAQD,OAAOC,aAAa,OAGjG,0BAAMM,MAAO,CAAEiC,MAAO,QAASC,aAAc,KAAOzC,OAAOC,aAAa,OAEtEkC,EACE,uBAAG5B,MAAO,CAAEE,QAAS,eAAgBC,OAAQ,IACvCyB,GAASA,EAAMpF,OAASoF,EAAMpF,OAAS,oDAD7C,MAC6DoF,GAASA,EAAMnF,MAAQmF,EAAMnF,MAAQ,KAGlG,uBAAGuD,MAAO,CAAEE,QAAS,eAAgBC,OAAQ,IAA7C,gDAKR,wBAAI3F,UAAU,sBACToH,EAAQ,0FAAsB,wEAM3C,yBAAKpH,UAAU,WACX,kBAAC,IAAD,CACIoF,MAAM,IACNC,OAAO,IACPG,MAAO,CAACE,QAAS,gBACjB1F,UAAU,SACV8B,IAAKmB,KAAKV,MAAMT,IAChBW,QAASQ,KAAKV,MAAME,QACpB8C,QAAS,kBAAM,EAAKrC,SAAS,CAAET,SAAS,KACxCkF,OAAQ,CACJzF,QAAS,CACT0F,WAAY,CAAEC,SAAU,OAIhC,yBAAK7H,UAAU,QAAQgF,QAAS/B,KAAKX,MAAM8D,OAAQnB,OAAOC,aAAa,MACvE,mGAEK2B,EAAQjG,IAAI,WAYb,yBAAKZ,UAAU,cACX,+BACI,+BACI,4BACI,wBAAIA,UAAU,sBAAd,qDACA,wBAAIA,UAAU,qBAAd,UACA,4FACA,wBAAIA,UAAU,sBAAd,4DAGR,+BACKiH,KArBT,oCACI,wBAAIjH,UAAU,iBAAd,kPACA,4BAAQA,UAAU,UAAUgF,QAAS,WACjC,EAAK1C,MAAM8D,QACX,EAAK9D,MAAMwF,YAFf,iE,GAtENvB,IAAMC,WAyGbC,kBAAQ,MANvB,SAA4BE,GACxB,MAAO,CACHmB,QAAS,kBAAMnB,EAAS,CAAE9E,KAAM,mBAIzB4E,CAAkCM,G,wBC5DlCN,mBAJf,SAAyBlE,GACrB,MAAO,CAAEwF,KAAMxF,EAAMwF,SAPzB,SAA4BpB,GACxB,MAAO,CACHmB,QAAS,kBAAMnB,EAAS,CAAE9E,KAAM,mBAQzB4E,EA9Cf,SAAsBnE,GAClB,OACI,yBAAKwD,GAAG,eAAe9F,UAAU,gBAC7B,yBAAKC,IAAK+H,IAAc9H,IAAI,KAC5B,yBAAKF,UAAU,QACX,4JACA,yBAAKA,UAAU,SACX,4BACI,geAGA,woBAGA,y1BAKNsC,EAAMyF,KACF,KACA,oCACE,4BAAQ/C,QAAS1C,EAAMwF,QAAS9H,UAAU,WAA1C,2DACA,yBAAKA,UAAU,aAGvB,kBAAC,IAAD,CAAOiI,QAAS,4BAAQjI,UAAU,WAAlB,iEAAkDmG,OAAK,EACvE+B,OAAS,kBAAMC,SAASC,KAAK5C,MAAM6C,SAAW,UAC9CC,QAAU,kBAAMH,SAASC,KAAK5C,MAAM6C,SAAW,UAC1C,SAAAjC,GAAK,OAAM,kBAAC,EAAY,CAACA,MAAOA,Y,iBC7B/CmC,G,mBAEF,WAAYjG,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTE,SAAS,GAGb,EAAKK,gBAAkB,EAAKA,gBAAgBF,KAArB,gBANR,E,iFAUf,IAAMiE,EAAU,IAAIC,IACpB,GAAID,EAAQjG,IAAI,YAAa,CACzB,IAAI4H,EAAY3B,EAAQjG,IAAI,YAC5B4H,EAAUzG,MAAiC,IAA5BkB,KAAKX,MAAMoE,aAAyB,KAAOzD,KAAKX,MAAMoE,cACrEG,EAAQ4B,IAAI,WAAYD,QAGxB3B,EAAQ4B,IAAI,WAAY,EAA6B,IAA5BxF,KAAKX,MAAMoE,aAAyB,KAAOzD,KAAKX,MAAMoE,iB,wCAKnFzD,KAAKC,SAAS,CACVT,SAAUQ,KAAKV,MAAME,Y,+BAInB,IAAD,OACDiG,EAAa,KACbC,EAAS,KASb,OARI1F,KAAKX,MAAMoE,cACXzD,KAAKX,MAAMoE,aAAavF,MAAMqD,OAAS,GACO,YAA9CvB,KAAKX,MAAMoE,aAAavF,MAAM,GAAGS,WAC7B+G,EAAS1F,KAAKX,MAAMoE,aAAavF,MAAM,GAAGW,IAC1C4G,EAAa,yBAAK1D,QAAS/B,KAAKH,gBAAiB9C,UAAU,QACrDiD,KAAKV,MAAME,QAAUwC,OAAOC,aAAa,MAAQD,OAAOC,aAAa,QAI/E,yBAAKlF,UAAU,YACX,qCAEoC,IAA5BiD,KAAKX,MAAMoE,aAEX,yBAAK1G,UAAU,mBACX,kMACA,+jBAGA,4BAAQA,UAAU,UAAUgF,QAAS,WACjC,EAAK1C,MAAM8D,QACX,EAAK9D,MAAMsG,YAAY,QAF3B,oFAQJ,yBAAK5I,UAAU,cACX,wFACA,oCACK0I,EACD,uBAAGlD,MAAO,CAAEE,QAAS,eAAgBC,OAAQ,IACxC1C,KAAKX,MAAMoE,aAAa1E,OAD7B,MACwCiB,KAAKX,MAAMoE,aAAazE,OAEhE,kBAAC,IAAD,CACImD,MAAM,IACNC,OAAO,IACPG,MAAO,CAACE,QAAS,gBACjB1F,UAAU,SACV8B,IAAK6G,EACLlG,QAASQ,KAAKV,MAAME,QACpB8C,QAAS,kBAAM,EAAKrC,SAAS,CAAET,SAAS,KACxCkF,OAAQ,CACJzF,QAAS,CACT0F,WAAY,CAAEC,SAAU,QAIpC,yBAAK7H,UAAU,WACX,4BAAQA,UAAU,UAAUgF,QAAS,WACjC,EAAK1C,MAAMuG,YAAY,EAAKvG,MAAMoE,cAClC,EAAKpE,MAAM8D,UAFf,8DAMA,yBAAKpG,UAAU,YACf,4BAAQA,UAAU,UAAUgF,QAAS,WACjC,EAAK1C,MAAMsG,YAAY,EAAKtG,MAAMoE,cAClC,EAAKpE,MAAM8D,UAFf,uEASZ,yBAAKnG,IAAK6I,IAAQ5I,IAAI,W,GAjGRqG,IAAMC,YAqHzBC,mBANf,SAAyBlE,GACrB,MAAO,CACHmE,aAAcnE,EAAMmE,iBAT5B,SAA4BC,GACxB,MAAO,CACHiC,YAAa,SAAChC,GAAD,OAAUD,EAAS,CAAE9E,KAAM,eAAgB+E,KAAMA,KAC9DiC,YAAa,SAACjC,GAAD,OAAUD,EAAS,CAAE9E,KAAM,eAAgB+E,KAAMA,QAUvDH,CAA6C8B,GCtHtDQ,G,mBACF,WAAYzG,GAAQ,IAAD,8BACf,4CAAMA,KAAYC,MAAQ,CACtBE,SAAS,EACTX,IAAK,KACLkH,UAAW,EACXC,cAAe,GAGnB,EAAKnG,gBAAkB,EAAKA,gBAAgBF,KAArB,gBARR,E,iFAWE,IAAD,OACViE,EAAU,IAAIC,IAChB0B,EAAY,KACZvF,KAAKX,MAAM4G,YACPrC,EAAQjG,IAAI,aACZ4H,EAAY3B,EAAQjG,IAAI,aACP,IACb4H,EAAUW,QAEdX,EAAUzG,KAAK8E,EAAQjG,IAAI,YAAYiG,EAAQjG,IAAI,YAAY4D,OAAS,IACxEqC,EAAQ4B,IAAI,UAAWD,IAGvB3B,EAAQ4B,IAAI,UAAW,CAAE5B,EAAQjG,IAAI,YAAYiG,EAAQjG,IAAI,YAAY4D,OAAS,KAIlFqC,EAAQjG,IAAI,aACZ4H,EAAY3B,EAAQjG,IAAI,aACP,IACb4H,EAAUW,QAEdX,EAAUzG,KAAK,MACf8E,EAAQ4B,IAAI,UAAWD,IAGvB3B,EAAQ4B,IAAI,UAAW,CAAE,OAGjC5B,EAAQuC,OAAO,YAEXvC,EAAQjG,IAAI,YACZiG,EAAQjG,IAAI,WAAWU,SAAQ,SAAAyG,GACtBA,EAMD,EAAK7E,UAAS,SAACmG,GACX,MAAO,CAAEJ,cAAeI,EAAUJ,cAAgB,MANtD,EAAK/F,UAAS,SAAAmG,GACT,MAAO,CAAEL,UAAWK,EAAUL,UAAY,W,wCAa3D/F,KAAKC,SAAS,CACVT,SAAUQ,KAAKV,MAAME,Y,+BAInB,IAAD,OACD6G,EAAS,KAwBb,OAvBKrG,KAAKX,MAAMiH,SAASC,OAAM,SAACpC,GAAY,OAAgB,MAATA,OAC/CkC,EAASrG,KAAKX,MAAMiH,SAAS7H,KAAI,SAAC0F,EAAOC,GACrC,GAAID,EAAO,CACP,IAAI3E,GAAU,EAId,OAHI2E,EAAMjG,MAAMqD,OAAS,GAAK,EAAKjC,MAAMT,MAAQsF,EAAMjG,MAAM,GAAGW,MAC5DW,GAAU,GAEP,yBAAK8E,IAAKF,GACHD,EAAMjG,MAAMqD,OAAS,GAAiC,YAA5B4C,EAAMjG,MAAM,GAAGS,UAA0B,yBAAK4D,MAAO,CAACE,QAAS,gBAAiBV,QAAS,WACjH,EAAKlC,kBACL,EAAKI,SAAS,CAACpB,IAAKsF,EAAMjG,MAAM,GAAGW,OACpC9B,UAAU,eACPyC,GAAW,EAAKF,MAAME,QAAUwC,OAAOC,aAAa,MAAQD,OAAOC,aAAa,OAEtF,uBAAGM,MAAO,CAAEE,QAAS,eAAgBC,OAAQ,GAAK3F,UAAU,gBACvDoH,EAAMpF,OAASoF,EAAMpF,OAAS,oDADnC,MACmDoF,EAAMnF,QAIzE,OAAO,SAKX,yBAAKjC,UAAU,UACX,kBAAC,IAAD,CACIoF,MAAM,IACNC,OAAO,IACPG,MAAO,CAACE,QAAS,gBACjB1F,UAAU,SACV8B,IAAKmB,KAAKV,MAAMT,IAChBW,QAASQ,KAAKV,MAAME,QACpB8C,QAAS,kBAAM,EAAKrC,SAAS,CAAET,SAAS,KACxCkF,OAAQ,CACJzF,QAAS,CACP0F,WAAY,CAAEC,SAAU,OAIlC,4BAAK5E,KAAKX,MAAM4G,YAAc,mFAAoB,4DAClD,+BACI,+BACI,4BACI,wBAAI/D,QAAQ,KAAZ,kGAGR,+BACI,4BACI,4BACI,gEACA,0BAAMnF,UAAU,cACXiD,KAAKV,MAAMyG,UADhB,IAC4B/F,KAAKV,MAAM0G,eAEvC,gFAKfK,EACD,4BAAQtJ,UAAU,UAAUgF,QAAS,WACjC,EAAK1C,MAAM8D,QACX,EAAK9D,MAAMmH,aACX,EAAKnH,MAAMa,WAAW,MACtB,EAAKb,MAAMoB,WAAW,MACtByE,SAASuB,eAAe,aAAajG,MAAQ,KALjD,mD,GA9HK8C,IAAMC,YA4JZC,mBARf,SAAyBlE,GACrB,MAAO,CACH2G,YAAa3G,EAAM2G,YACnBS,QAASpH,EAAMoH,QACfJ,SAAUhH,EAAMqH,aAZxB,SAA4BjD,GACxB,MAAO,CACH8C,WAAY,kBAAM9C,EAAS,CAAE9E,KAAM,iBACnC6B,WAAY,SAACG,GAAD,OAAU8C,EAAS,CAAE9E,KAAM,cAAegC,KAAMA,KAC5DV,WAAY,SAACS,GAAD,OAAU+C,EAAS,CAAE9E,KAAM,cAAe+B,KAAMA,QAYrD6C,CAA6CsC,G,kCClJtD1E,GAAO,CACT,CACIpC,MAAO,qGACP4C,OAAQ,uCACRgF,YAAa,oTACbjF,OAAQkF,IACRhF,MAAM,GAEV,CACI7C,MAAO,qGACP4C,OAAQ,uCACRgF,YAAa,4TACbjF,OAAQjE,IACRmE,MAAM,IAIRiF,G,YACF,WAAYzH,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTyG,UAAW,EACXC,cAAe,GAJJ,E,iFAQE,IAAD,OACVpC,EAAU,IAAIC,IAChBD,EAAQjG,IAAI,YACZiG,EAAQjG,IAAI,WAAWU,SAAQ,SAAAyG,GACtBA,EAMD,EAAK7E,UAAS,SAACmG,GACX,MAAO,CAAEJ,cAAeI,EAAUJ,cAAgB,MANtD,EAAK/F,UAAS,SAAAmG,GACT,MAAO,CAAEL,UAAWK,EAAUL,UAAY,W,+BAc3D,IAAIgB,EAAQ3F,GAAK3C,KAAI,SAAAc,GAAY,OAAO,kBAAC,EAAD,eAAM+E,IAAK/E,EAAOsC,MAAUtC,OAUpE,OACI,oCACI,yBAAKxC,UAAU,aACf,yBAAKA,UAAU,QACX,uBAAGA,UAAU,SAAb,gGACA,uBAAGA,UAAU,4BACT,2CADJ,gxBAMA,kBAAC,EAAD,OACyB,IAAvBiD,KAAKX,MAAMqH,UAA+C,IAA3B1G,KAAKX,MAAM4G,YACtC,kBAAC,IAAD,CAAOhD,MAAM,EAAMC,OAAK,IAAE,SAAAC,GAAK,OAAM,kBAAC,EAAW,CAACA,MAAOA,OACzD,KAEN,6BAASZ,MAAO,CAAEE,QAASzC,KAAKX,MAAMyF,KAAO,GAAK,OAAQtC,aAAc,IACpE,yBAAKzF,UAAU,aACX,+BACI,+BACI,4BACI,4HACA,8HAGR,+BACI,4BACI,wBAAIA,UAAU,YACNiD,KAAKX,MAAMsH,SACX,EAAI3G,KAAKX,MAAMsH,SAASpF,OACtB,MAGV,wBAAIxE,UAAU,SAASiD,KAAKV,MAAMyG,UAAlC,IAA8C/F,KAAKV,MAAM0G,gBAE7D,wBAAIjJ,UAAU,aACV,6BACA,4BAAI,gEAAkB,iFAKtC,yBAAKA,UAAU,SACVgK,GAEL,kBAAC,IAAD,iBAtDD,CACXC,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,GAgDJ,CAAsBtK,UAAU,iBAC3BgK,GAEyB,OAA5B/G,KAAKX,MAAMoE,aACP,KACA,kBAAC,IAAD,CAAOR,MAAM,EAAMC,OAAK,IAAE,SAAAC,GAAK,OAAK,kBAAC,EAAwB,CAAEA,MAAOA,c,GAzF9EG,IAAMC,WA4GbC,oBAVf,SAAyBlE,GACrB,MAAO,CACHqH,SAAUrH,EAAMqH,SAChB7B,KAAMxF,EAAMwF,KACZrB,aAAcnE,EAAMmE,aACpBwC,YAAa3G,EAAM2G,YACnBS,QAASpH,EAAMoH,WAIRlD,CAAyBsD,I,OCvHzBtD,oBANf,SAAyBlE,GACrB,MAAO,CACHgI,QAAShI,EAAMgI,WAIR9D,EAlBf,SAAiBnE,GACb,OACI,yBAAKtC,UAAU,UAAUwF,MAAO,CAACE,QAASpD,EAAMiI,QAAU,GAAK,SAC3D,yBAAKvK,UAAU,mBACX,4BACA,4BACA,iCCFVwK,G,iLAEE,OACI,oCACI,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,W,GANEjE,IAAMC,WAkBTC,oBANf,SAAyBlE,GACrB,MAAO,CACHwF,KAAMxF,EAAMwF,QAILtB,CAAyB+D,IClBlC3D,GAAU,IAAIC,IAEd2D,GAAY,CACd5G,KAAM,KACND,KAAM,KACNjD,KAAM,GACNoH,OAAOlB,GAAQjG,IAAI,YACnBgJ,SAAW/C,GAAQjG,IAAI,YAAmBiG,GAAQjG,IAAI,YAAjB,GACrC8F,aAAc,KACdwC,aAAa,EACbS,SAAS,EACTY,SAAS,GA4FPG,GAAQC,aAzFE,WAAgC,IAA/BpI,EAA8B,uDAAtBkI,GAAWG,EAAW,uCAC3C,OAAQA,EAAO/I,MACX,IAAK,aAKD,OAJAuB,YAAW,WACPyH,OAAOC,SAAS,CAACC,IAAK5C,SAASuB,eAAe,gBAAgBsB,aAAcC,SAAU,aACvF,KAEI,eACA1I,EADP,CAEIwF,MAAM,IAGd,IAAK,cACD,OAAO,eACAxF,EADP,CAEImE,aAAckE,EAAOhE,OAG7B,IAAK,cACD,OAAO,eACArE,EADP,CAEIsB,KAAM+G,EAAO/G,OAGrB,IAAK,cACD,OAAO,eACAtB,EADP,CAEIqB,KAAMgH,EAAOhH,OAGrB,IAAK,cACD,OAAO,eACArB,EADP,CAEI5B,KAAMiK,EAAOjK,OAGrB,IAAK,eACD,IAAIuK,EAAI,YAAO3I,EAAMqH,UAErB,OADAsB,EAAKnJ,KAAK6I,EAAOhE,MACV,eACArE,EADP,CAEIqH,SAAUsB,EACVxE,aAAc,KACdiD,QAASuB,EAAK1G,QAAU,EACxBuD,OAAMmD,EAAK1G,QAAU,KAG7B,IAAK,eACD,IAAI0G,EAAI,YAAO3I,EAAMqH,UAErB,OADAsB,EAAKnJ,KAAK6I,EAAOhE,MACV,eACArE,EADP,CAEIwF,MAAM,EACN6B,SAAUsB,EACVxE,aAAc,KACdwC,aAAa,IAGrB,IAAK,cACD,OAAO,eACA3G,EADP,CAEIqH,SAAU,GACVV,aAAa,EACbS,SAAS,IAGjB,IAAK,oBACD,OAAO,eACApH,EADP,CAEIyG,UAAWzG,EAAMyG,UAAY,IAGrC,IAAK,wBACD,OAAO,eACAzG,EADP,CAEI0G,cAAe1G,EAAM0G,cAAgB,IAG7C,IAAK,iBACD,OAAO,eACA1G,EADP,CAEIgI,SAAUhI,EAAMgI,UAGxB,QACI,OAAOhI,MAMnB4I,IAASC,OAAO,kBAAC,IAAD,CAAUV,MAAOA,IAAO,kBAAC,GAAD,OAAoBvC,SAASuB,eAAe,U,mBClHpF2B,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.a545b38a.chunk.js","sourcesContent":["import React from 'react';\n\nimport redVinul from '../img/red_vinyl.png'\nimport yellowVinyl from '../img/yellow_vinyl.png'\nimport blueVinyl from '../img/blue_vinyl.png'\nimport '../style/Header.scss'\n\nconst vinyls = [redVinul, yellowVinyl, blueVinyl];\nfunction compareRandom() {\n    return Math.random() - 0.5;\n}\nvinyls.sort(compareRandom);\n\nfunction Header() {\n    return (\n        <div className=\"header\">\n            <img className=\"left_img\" src={vinyls[0]} alt=\"\" />\n            <img className=\"main_img\" src={vinyls[1]} alt=\"\" />\n            <img className=\"right_img\" src={vinyls[2]} alt=\"\" />\n            <p>Beep-boop</p>\n        </div>\n    )\n}\n\nexport default Header","import axios from 'axios'\nconst token = \"15616327ffd5c6bef2e8ecb3f0437cb6\"\nconst api = {\n    sendAudio: (fileFormData) => {\n        fileFormData.append(\"api_token\", token);\n        return axios.post(\"https://api.audd.io/\", fileFormData)\n    },\n    sendText: (text) => {\n        return axios.get(\"https://api.audd.io/findLyrics/\", {\n            params: {\n                q: text,\n                api_token: token\n            }\n        })\n    },\n    generalizeResponse: (response) => {\n        let result = []\n        let media = []\n        if (!('error' in response)) {\n            if (response.result instanceof Array) {\n                response.result.forEach(obj => {\n                    if ('media' in obj && obj.media !== \"\") {\n                        media = JSON.parse(obj.media)\n                        media = media.map(m => {\n                            return {\n                                \"provider\": m.provider,\n                                \"type\": m.type,\n                                \"url\": m.url\n                            }\n                        })\n                    }\n                    else {\n                        media = [{\n                            \"provider\": obj.media.provider,\n                            \"type\": obj.media.type,\n                            \"url\": obj.media.url\n                        }]\n                    }\n                    result.push({\n                        \"artist\": obj.artist,\n                        \"title\": obj.title,\n                        \"media\": media\n                    })\n                });\n            }\n            else if (response.result) {\n                result = [{\n                    \"artist\": ('artist' in response.result) ? response.result.artist : null,\n                    \"title\": response.result.title,\n                    \"media\": ('media' in response.result && response.result.media !== \"\") ? JSON.parse(response.result.media) : [{\n                        \"provider\": \"youtube\",\n                        \"type\": \"audio\",\n                        \"url\": ('youtube' in response.result) ? response.result.youtube.link : null,\n                    }]\n                }]\n            }\n            else {\n                return {\n                    \"status\": \"success\",\n                    \"result\": null\n                }\n            }\n        }\n        else {\n            return {\n                \"status\": \"error\",\n                \"error\": response.error\n            }\n        }\n        return {\n            \"status\": response.status,\n            \"result\": result\n        }\n    }\n}\n\nexport default api;","import React from 'react';\nimport { connect } from 'react-redux'\nimport Popup from \"reactjs-popup\";\nimport { ReactMic } from 'react-mic'\nimport ReactPlayer from 'react-player'\nimport api from '../api'\nimport '../style/Card.scss'\n\nclass Card extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            record: false,\n            playing: false,\n            popUp: false\n        }\n\n        this.startRecording = this.startRecording.bind(this);\n        this.stopRecording = this.stopRecording.bind(this);\n        this.toggleListening = this.toggleListening.bind(this);\n        this.handleFile = this.handleFile.bind(this);\n        this.handleText = this.handleText.bind(this);\n        this.sendAudio = this.sendAudio.bind(this);\n        this.sendText = this.sendText.bind(this);\n    }\n\n    toggleListening() {\n        this.setState({\n            playing: !this.state.playing\n        });\n    }\n\n    startRecording() {\n        this.props.updateFile(null)\n        this.setState({\n            record: true\n        });\n        setTimeout(function(){\n            this.stopRecording();\n        }.bind(this), 20000);\n    }\n\n    stopRecording() {\n        this.setState({\n            record: false\n        });\n    }\n\n    handleFile(e) {\n        if (e.target.files[0].size > 10485760) {\n            e.target.value = null\n            this.props.updateFile(false)\n            this.props.updateBlob(null)\n            this.setState({ popUp: true })\n        }\n        else {\n            this.props.updateFile(e.target.files[0])\n            this.props.updateBlob(null)\n        }\n    }\n\n    handleText(e) {\n        this.props.updateText(e.target.value)\n    }\n\n    sendAudio() {\n        var file = this.props.file\n        if (!file && this.props.blob) {\n            file = new File([this.props.blob.blob], \"record.mp3\", { lastModified: new Date(), type: 'audio/mp3' });\n        }\n        if (!this.props.blob && !this.props.file) {\n            return;\n        }\n        var formData = new FormData();\n        formData.append(\"file\", file);\n        this.props.toggleSpinner();\n        api.sendAudio(formData)\n            .then((response) => {\n                if (response.status === 200 && response.data.status === \"success\") {\n                    let generalized = api.generalizeResponse(response.data)\n                    this.props.updateSong(generalized.result && generalized.result.length > 0 ? generalized.result[0] : false)\n                    this.props.toggleSpinner();\n                } else {\n                    this.setState({ popUp: true })\n                    this.props.toggleSpinner();\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    sendText() {\n        if (this.props.text !== \"\") {\n            this.props.toggleSpinner();\n            api.sendText(this.props.text)\n                .then((response) => {\n                    if (response.status === 200 && response.data.status === \"success\") {\n                        let generalized = api.generalizeResponse(response.data)\n                        this.props.updateSong(generalized.result && generalized.result.length > 0 ? generalized.result[0] : false)\n                        this.props.toggleSpinner();\n                    }\n                    else {\n                        this.setState({ popUp: true })\n                        this.props.toggleSpinner();\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        }\n    }\n\n\n    render() {\n        return (\n            <div className='card'>\n                <img src={this.props.imgUrl} alt=\"\" />\n                <p className=\"heading\">{this.props.title} <br /> <span>{this.props.accent}</span></p>\n\n                <div className=\"description\">\n                    {this.props.case ? (\n                        <div>\n                            <table>\n                                <tbody>\n                                    {this.props.file != null ? (<>\n                                        <tr><td>Ваш файл:</td></tr>\n                                        <tr>\n                                            <td className=\"audio_file\">\n                                                {this.props.file ? this.props.file.name : \"Сталася помилка, спробуйте ще раз!\"}\n                                                <div\n                                                onClick={() => this.props.updateFile(null)}\n                                                className=\"delete\"\n                                                >\n                                                    {String.fromCharCode(215)}\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    </>) : (this.props.blob ? (<>\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                Ваш запис:\n                                                <ReactPlayer\n                                                    width=\"0\"\n                                                    height=\"0\"\n                                                    className=\"player\"\n                                                    url={this.props.blob.blobURL}\n                                                    playing={this.state.playing}\n                                                    onEnded={() => this.setState({ playing: false })} />\n                                            </td>\n                                        </tr>\n                                        <tr style={{ marginBottom: 20 }}><td>\n                                            <div onClick={this.toggleListening} className=\"play\">\n                                                { this.state.playing ? String.fromCharCode(9209) : String.fromCharCode(9654) }\n                                            </div>\n                                            <p style={{ display: 'inline-block', margin: 0 }}>Голосовий запис</p>\n                                            <div onClick={() => this.props.updateBlob(null)} className=\"delete\">\n                                                {String.fromCharCode(215)}\n                                            </div>\n                                        </td></tr>\n                                    </>) : (<>\n                                        <tr>\n                                            <td>Завантаж файл:</td>\n                                            <td>Або зроби аудiозапис:</td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <label className=\"btn red\" htmlFor=\"files\">Завантажити</label>\n                                                <input\n                                                    style={{ visibility: \"hidden\", display: \"none\" }}\n                                                    id=\"files\"\n                                                    type=\"file\"\n                                                    accept=\"audio/*\"\n                                                    name=\"file\"\n                                                    onChange={this.handleFile}\n                                                />\n                                            </td>\n                                            <td>\n                                                <ReactMic\n                                                    record={this.state.record}\n                                                    className=\"sound\"\n                                                    onStop={(blob) => this.props.updateBlob(blob)}\n                                                    width={0} height={0} />\n                                                <button\n                                                    onClick={this.state.record ? this.stopRecording : this.startRecording}\n                                                    type=\"button\"\n                                                    className={this.state.record ? \"btn red_blinking\" : \"btn red\"}\n                                                >\n                                                    {this.state.record ? 'Стоп' : 'Почати запис'}\n                                                </button>\n                                                <div className=\"divider\" />\n                                            </td>\n                                        </tr>\n                                    </>))}\n                                </tbody>\n                            </table>\n                        <Popup open={this.state.popUp} modal>\n                            {close => (\n                                <>\n                                    <h1>Сталася помилка! Можливо, ваш файл занадто малий або великий.</h1>\n                                    <button className=\"btn red\" onClick={() => {\n                                        close();\n                                        this.setState({ popUp: false })\n                                    }}>\n                                        Зрозумiло\n                                    </button>\n                                </> \n                            )}\n                        </Popup>\n                        </div>)\n                        : (\n                            <div>\n                                <textarea id=\"song_text\" onChange={this.handleText} placeholder={\"I'm blue da ba dee da ba daa...\"} rows={'3'} />\n                        <Popup open={this.state.popUp} modal>\n                            {close => (\n                                <>\n                                    <h1>Сталася помилка! Повторiть спробу.</h1>\n                                    <button className=\"btn red\" onClick={() => {\n                                        close();\n                                        this.setState({ popUp: false })\n                                    }}>\n                                        Зрозумiло\n                                    </button>\n                                </>\n                            )}\n                        </Popup>\n                            </div>\n                        )}\n                </div>\n\n                <div className=\"btn_block\">\n                    <input className=\"btn blue\" type=\"submit\" name=\"submit\" value=\"Надіслати\"\n                        onClick={this.props.case ? this.sendAudio : this.sendText} />\n                </div>\n            </div >\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateBlob: (blob) => dispatch({ type: 'UPDATE_BLOB', blob: blob }),\n        updateFile: (file) => dispatch({ type: 'UPDATE_FILE', file: file }),\n        updateText: (text) => dispatch({ type: 'UPDATE_TEXT', text: text }),\n        updateSong: (song) => dispatch({ type: 'UPDATE_SONG', song: song }),\n        toggleSpinner: () => dispatch({ type: 'TOGGLE_SPINNER' })\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        blob: state.blob,\n        file: state.file,\n        text: state.text,\n        possibleSong: state.possibleSong\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card)","import React from 'react';\nimport Cookie from 'universal-cookie'\nimport { connect } from 'react-redux'\nimport ReactPlayer from 'react-player'\n\nimport '../style/History.scss'\n\nconst cookies = new Cookie();\n\nclass History extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playing: false,\n            url: null\n        }\n    }\n    render() {\n        let songs = cookies.get('history');\n        var games = null \n        if(songs) {\n            games = songs.slice(0).reverse().map((sound, index) => {\n                let currentSongPlaying = false;\n                if (sound && sound.media.length > 0 && this.state.url === sound.media[0].url) {\n                    currentSongPlaying = true\n                } \n                return <tr key={index}>\n                    <td>{songs.length - index}</td>\n                    <td className=\"song_cell\" style={{ textAlign: \"left\" }}>{sound && sound.media.length > 0 && sound.media[0].provider === \"youtube\" ? \n                    <div className=\"play\" onClick={() => {\n                            this.setState({\n                                playing: !this.state.playing\n                            });\n                            this.setState({url: sound.media[0].url})\n                        }}>\n                            { currentSongPlaying && this.state.playing ? String.fromCharCode(9209) : String.fromCharCode(9654) }\n                        </div>\n                        :\n                        <span style={{ color: \"white\", paddingRight: 10 }}>{String.fromCharCode(9654)}</span>\n                        }\n                        { sound ? \n                            <p style={{ display: 'inline-block', margin: 0 }}>\n                                { sound && sound.artist ? sound.artist : \"Невiдомий\"} - {sound && sound.title ? sound.title : \"-\"}\n                            </p>\n                            :\n                            <p style={{ display: 'inline-block', margin: 0}}>\n                                Невiдома\n                            </p>\n                        }\n                    </td>\n                    <td className=\"disabled_on_mobile\">\n                        {sound ? \"Перемiг комп'ютер\" : \"Перемiг гiсть\"}\n                    </td>\n                </tr>\n            })\n        }\n        return (\n            <div className=\"history\">\n                <ReactPlayer\n                    width=\"0\"\n                    height=\"0\"\n                    style={{display: \"inline-block\"}}\n                    className=\"player\"\n                    url={this.state.url}\n                    playing={this.state.playing}\n                    onEnded={() => this.setState({ playing: false })} \n                    config={{\n                        youtube: {\n                        playerVars: { showinfo: 1 }\n                        }\n                    }}/>\n\n                <div className=\"close\" onClick={this.props.close}>{String.fromCharCode(215)}</div>\n                <h1>Історія ігор</h1>\n                {\n                    !cookies.get('history')\n                    ?\n                        <>\n                            <h1 className=\"empty_history\">Здається, у вас ще не було проведено жодної гри!</h1>\n                            <button className=\"btn red\" onClick={() => {\n                                this.props.close();\n                                this.props.onStart();\n                            }}>\n                                Почати гру\n                            </button>\n                        </>\n                    :\n                    <div className=\"table_wrap\">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th className=\"disabled_on_mobile\">Номер гри</th>\n                                    <th className=\"enabled_on_mobile\">№</th>\n                                    <th>Композиція</th>\n                                    <th className=\"disabled_on_mobile\">Результат</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {games}\n                            </tbody>\n                        </table>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onStart: () => dispatch({ type: 'START_GAME' })\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(History)","import React from 'react';\nimport Popup from \"reactjs-popup\";\nimport { connect } from 'react-redux'\n\nimport History from './History'\nimport introduction from '../img/introduction.png'\nimport '../style/Introduction.scss'\n\nfunction Introduction(props) {\n    return (\n        <div id=\"introduction\" className=\"introduction\">\n            <img src={introduction} alt=\"\"/>\n            <div className=\"wrap\">\n                <h2>Коротко про правила гри:</h2>\n                <div className=\"rules\">\n                    <ul>\n                        <li>\n                            Гість має загадати будь-яку пісню, а потім заспівати/програти/ввети будь-яку її частину;\n                        </li>\n                        <li>\n                            Додаток намагатиметься відгадати цю пісню та надаватиме користувачеві варіанти своїх відповідей протягом 5-ти спроб;\n                        </li>\n                        <li>\n                            Якщо правильна відповідь не була надана, перемогу одержує гість (користувач має змогу підтверджувати правильніть відповіді), у протилежному випадку - додаток.\n                        </li>\n                    </ul>\n                </div>\n                { props.game\n                    ? null\n                    : <>\n                        <button onClick={props.onStart} className=\"btn red\">Почати гру</button>\n                        <div className=\"divider\"/>\n                    </>\n                }\n                <Popup trigger={<button className=\"btn red\">Історія гри</button>} modal\n                onOpen={ () => document.body.style.overflow = 'hidden' }\n                onClose={ () => document.body.style.overflow = 'auto' }>\n                    {close => ( <History {...{close: close}}/> )}\n                </Popup>\n            </div>\n        </div>\n    )\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onStart: () => dispatch({ type: 'START_GAME' })\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { game: state.game }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Introduction)","import React from 'react';\nimport { connect } from 'react-redux'\nimport Cookie from 'universal-cookie'\nimport ReactPlayer from 'react-player'\n\nimport search from '../img/search.png'\nimport '../style/RecognitionResponse.scss'\n\nclass RecognitionResponse extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            playing: false\n        }\n\n        this.toggleListening = this.toggleListening.bind(this);\n    }\n\n    componentDidMount() {\n        const cookies = new Cookie();\n        if (cookies.get('attempts')) {\n            var bufCookie = cookies.get('attempts');\n            bufCookie.push(this.props.possibleSong === false ? null : this.props.possibleSong);\n            cookies.set('attempts', bufCookie);\n        }\n        else {\n            cookies.set('attempts', [this.props.possibleSong === false ? null : this.props.possibleSong])\n        }\n    }\n\n    toggleListening() {\n        this.setState({\n            playing: !this.state.playing\n        });\n    }\n\n    render() {\n        let playButton = null\n        let endUrl = null\n        if (this.props.possibleSong &&\n            this.props.possibleSong.media.length > 0 && \n            this.props.possibleSong.media[0].provider === \"youtube\") {\n                endUrl = this.props.possibleSong.media[0].url\n                playButton = <div onClick={this.toggleListening} className=\"play\">\n                    { this.state.playing ? String.fromCharCode(9209) : String.fromCharCode(9654) }\n                </div>\n            }\n        return (\n            <div className=\"response\">\n                <>\n                    {\n                        this.props.possibleSong === false\n                        ?\n                        <div className=\"not_found_sound\">\n                            <h1>Нажаль, нічого не було знайдено!</h1>\n                            <p>\n                                Здається, додаток не зміг розпізнати пісню. Спробуйте покращити якість запису або поточнити текст пісні.\n                            </p>\n                            <button className=\"btn red\" onClick={() => { \n                                this.props.close();\n                                this.props.wrongAnswer(null);\n                            }}>\n                                Продовжити гру\n                            </button>\n                        </div>\n                        :\n                        <div className=\"found_song\">\n                            <h1>Ми знайшли!</h1>\n                            <>\n                                {playButton}\n                                <p style={{ display: 'inline-block', margin: 0 }}>\n                                    {this.props.possibleSong.artist} - {this.props.possibleSong.title}\n                                </p>\n                                <ReactPlayer\n                                    width=\"0\"\n                                    height=\"0\"\n                                    style={{display: \"inline-block\"}}\n                                    className=\"player\"\n                                    url={endUrl}\n                                    playing={this.state.playing}\n                                    onEnded={() => this.setState({ playing: false })} \n                                    config={{\n                                        youtube: {\n                                        playerVars: { showinfo: 1 }\n                                        }\n                                    }}/>\n                            </>\n                            <div className=\"buttons\">\n                                <button className=\"btn red\" onClick={() => {\n                                    this.props.rightAnswer(this.props.possibleSong);\n                                    this.props.close();\n                                }}>\n                                    Так, це воно!\n                                </button>\n                                <div className=\"divider\" />\n                                <button className=\"btn red\" onClick={() => {\n                                    this.props.wrongAnswer(this.props.possibleSong);\n                                    this.props.close();\n                                }}>\n                                    Ні, це не воно!\n                                </button>\n                            </div>\n                        </div>\n                    }\n                    <img src={search} alt=\"\" />\n                </>\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        wrongAnswer: (song) => dispatch({ type: 'WRONG_ANSWER', song: song }),\n        rightAnswer: (song) => dispatch({ type: 'RIGHT_ANSWER', song: song })\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        possibleSong: state.possibleSong \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecognitionResponse)","import React from 'react';\nimport { connect } from 'react-redux'\nimport Cookie from 'universal-cookie'\nimport ReactPlayer from 'react-player'\n\nimport '../style/Result.scss'\n\nclass Result extends React.Component {\n    constructor(props) {\n        super(props);this.state = {\n            playing: false,\n            url: null,\n            userScore: 0,\n            computerScore: 0\n        }\n\n        this.toggleListening = this.toggleListening.bind(this);\n    }\n\n    componentDidMount() {\n        const cookies = new Cookie();\n        var bufCookie = null;\n        if (this.props.computerWon) {\n            if (cookies.get('history')) {\n                bufCookie = cookies.get('history');\n                if (bufCookie >= 30) {\n                    bufCookie.shift();\n                }\n                bufCookie.push(cookies.get('attempts')[cookies.get('attempts').length - 1]);\n                cookies.set('history', bufCookie);\n            }\n            else {\n                cookies.set('history', [ cookies.get('attempts')[cookies.get('attempts').length - 1] ]);\n            }\n        }\n        else {\n            if (cookies.get('history')) {\n                bufCookie = cookies.get('history');\n                if (bufCookie >= 30) {\n                    bufCookie.shift();\n                }\n                bufCookie.push(null);\n                cookies.set('history', bufCookie);\n            }\n            else {\n                cookies.set('history', [ null ]);\n            }\n        }\n        cookies.remove('attempts');\n\n        if (cookies.get('history')) {\n            cookies.get('history').forEach(game => {\n                if (!game) {\n                    this.setState(prevState => {\n                         return { userScore: prevState.userScore + 1 }\n                    })\n                }\n                else {\n                    this.setState((prevState) => {\n                        return { computerScore: prevState.computerScore + 1 }\n                    })\n                }\n            })\n        }\n    }\n\n    toggleListening() {\n        this.setState({\n            playing: !this.state.playing\n        });\n    }\n\n    render() {\n        var sounds = null;\n        if (!this.props.playList.every((sound) => { return sound == null })) {\n            sounds = this.props.playList.map((sound, index) => {\n                if (sound) {\n                    let playing = false;\n                    if (sound.media.length > 0 && this.state.url === sound.media[0].url) {\n                        playing = true\n                    } \n                    return <div key={index}>\n                                { sound.media.length > 0 && sound.media[0].provider === \"youtube\" && <div style={{display: \"inline-block\"}} onClick={() => {\n                                    this.toggleListening()\n                                    this.setState({url: sound.media[0].url})\n                                }} className=\"play_yellow\">\n                                    { playing && this.state.playing ? String.fromCharCode(9209) : String.fromCharCode(9654) }\n                                </div>}\n                                <p style={{ display: 'inline-block', margin: 0 }} className=\"result_title\">\n                                    {sound.artist ? sound.artist : \"Невiдомий\"} - {sound.title}\n                                </p>\n                        </div>\n                }\n                return null\n            })\n        }\n\n        return (\n            <div className=\"result\">\n                <ReactPlayer\n                    width=\"0\"\n                    height=\"0\"\n                    style={{display: \"inline-block\"}}\n                    className=\"player\"\n                    url={this.state.url}\n                    playing={this.state.playing}\n                    onEnded={() => this.setState({ playing: false })} \n                    config={{\n                        youtube: {\n                          playerVars: { showinfo: 1 }\n                        }\n                    }}/>\n\n                <h1>{this.props.computerWon ? 'Додаток виграв!' : 'Ви виграли!'}</h1>\n                <table>\n                    <thead>\n                        <tr>\n                            <th colSpan=\"3\">Поточний рахунок:</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <span>гість</span>\n                                <span className=\"curr_score\">\n                                    {this.state.userScore}:{this.state.computerScore}\n                                </span>\n                                <span>додаток</span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                {sounds}\n                <button className=\"btn red\" onClick={() => {\n                    this.props.close();\n                    this.props.finishGame();\n                    this.props.updateFile(null);\n                    this.props.updateBlob(null);\n                    document.getElementById(\"song_text\").value = \"\";\n                }}>\n                    Закрити\n                </button>\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        finishGame: () => dispatch({ type: 'FINISH_GAME' }),\n        updateBlob: (blob) => dispatch({ type: 'UPDATE_BLOB', blob: blob }),\n        updateFile: (file) => dispatch({ type: 'UPDATE_FILE', file: file }),\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        computerWon: state.computerWon,\n        userWon: state.userWon,\n        playList: state.attempts\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Result)","import React from 'react';\nimport { connect } from 'react-redux'\nimport Popup from \"reactjs-popup\";\nimport Slider from \"react-slick\";\nimport Cookie from 'universal-cookie'\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport '../style/Content.scss'\n\nimport Card from './Card'\nimport Introduction from './Introduction'\nimport RecognitionResponse from './RecognitionResponse'\nimport Result from './Result'\nimport audio from '../img/audio.png'\nimport text from '../img/text.png'\n\nconst data = [\n    {\n        title: 'Пошук за допомогою',\n        accent: 'запису',\n        description: 'Описание тоже на две строчки, потом посмотрим, что там будет',\n        imgUrl: audio,\n        case: true\n    },\n    {\n        title: 'Пошук за допомогою',\n        accent: 'тексту',\n        description: 'Описание тоже на две строчки, потом посмотрим, что там будет №2',\n        imgUrl: text,\n        case: false\n    },\n]\n\nclass Content extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userScore: 0,\n            computerScore: 0\n        }\n    }\n\n    componentDidMount() {\n        const cookies = new Cookie();\n        if (cookies.get('history')) {\n            cookies.get('history').forEach(game => {\n                if (!game) {\n                    this.setState(prevState => {\n                         return { userScore: prevState.userScore + 1 }\n                    })\n                }\n                else {\n                    this.setState((prevState) => {\n                        return { computerScore: prevState.computerScore + 1 }\n                    })\n                }\n            })\n        }\n    }\n\n\n    render() {\n        var cards = data.map(record => { return <Card key={record.case} {...record} /> })\n        var settings = {\n            arrows: false,\n            dots: true,\n            infinite: false,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n        };\n\n        return (\n            <>\n                <div className=\"triangle\" />\n                <div className=\"game\">\n                    <p className=\"title\">Музичний акiнатор</p>\n                    <p className=\"introductory_description\">\n                        <span>Beep-boop</span> - це музичний акінатор, тобто гра, в якiй комп'ютер повинен вiдгадати пiсню, що ви загадали,\n                        і до того ж надасть вам можливість прослухати та насолодитись нею.\n\n                    </p>\n\n                    <Introduction />\n                    { this.props.userWon === true || this.props.computerWon === true\n                        ? <Popup open={true} modal>{close => ( <Result {...{close: close}} /> )}</Popup>\n                        : null\n                    }\n                    <section style={{ display: this.props.game ? '' : 'none', marginBottom: 0 }}>\n                        <div className=\"game_data\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Залишилось спроб:</th>\n                                        <th>Поточний рахунок:</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td className=\"attempts\">\n                                            {   this.props.attempts ? \n                                                5 - this.props.attempts.length\n                                                : null\n                                            }\n                                        </td>\n                                        <td className=\"score\">{this.state.userScore}:{this.state.computerScore}</td>\n                                    </tr>\n                                    <tr className=\"delimiter\">\n                                        <td></td>\n                                        <td><span>гість</span><span>додаток</span></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"cards\">\n                            {cards}\n                        </div>\n                        <Slider {...settings} className=\"cards_slider\">\n                            {cards}\n                        </Slider>\n                        { this.props.possibleSong === null\n                            ? null\n                            : <Popup open={true} modal>{close => (<RecognitionResponse {...{ close: close }} />)}</Popup>\n                        }\n                    </section>\n                </div>\n            </>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        attempts: state.attempts,\n        game: state.game,\n        possibleSong: state.possibleSong,\n        computerWon: state.computerWon,\n        userWon: state.userWon\n    }\n}\n\nexport default connect(mapStateToProps)(Content)","import React from 'react'\nimport { connect } from 'react-redux';\n\nimport '../style/Spinner.scss'\n\nfunction Spinner(props) {\n    return(\n        <div className=\"wrapper\" style={{display: props.spinner ? '' : 'none' }}>\n            <div className=\"cssload-loading\">\n                <i></i>\n                <i></i>\n                <i></i>\n            </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return { \n        spinner: state.spinner\n    }\n}\n\nexport default connect(mapStateToProps)(Spinner)","// TODO прокрутка в case 'START_GAME'\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport Header from './components/Header'\nimport Content from './components/Content'\nimport Spinner from './components/Spinner'\n\nclass App extends React.Component {\n    render() {\n        return (\n            <>\n                <Spinner />\n                <Header />\n                <Content />\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { \n        game: state.game\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport Cookie from 'universal-cookie'\n\nimport './style/index.scss';\nimport App from './App';\n\nconst cookies = new Cookie();\n\nconst initState = {\n    blob: null,\n    file: null,\n    text: \"\",\n    game: !cookies.get('attempts') ? false : true,\n    attempts: !cookies.get('attempts') ? [] : cookies.get('attempts'),\n    possibleSong: null,\n    computerWon: false,\n    userWon: false,\n    spinner: false\n}\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'START_GAME': {\n            setTimeout(() => {\n                window.scrollBy({top: document.getElementById('introduction').offsetHeight, behavior: 'smooth'});\n            }, 100);\n\n            return {\n                ...state,\n                game: true\n            }\n        }\n        case 'UPDATE_SONG': {\n            return {\n                ...state,\n                possibleSong: action.song\n            }\n        }\n        case 'UPDATE_BLOB': {\n            return {\n                ...state,\n                blob: action.blob\n            }\n        }\n        case 'UPDATE_FILE': {\n            return {\n                ...state,\n                file: action.file\n            }\n        }\n        case 'UPDATE_TEXT': {\n            return {\n                ...state,\n                text: action.text\n            }\n        }\n        case 'WRONG_ANSWER': {\n            let temp = [...state.attempts]\n            temp.push(action.song);\n            return {\n                ...state,\n                attempts: temp,\n                possibleSong: null,\n                userWon: temp.length >= 5 ? true : false,\n                game: temp.length >= 5 ? false : true\n            }\n        }\n        case 'RIGHT_ANSWER': {\n            let temp = [...state.attempts]\n            temp.push(action.song);\n            return {\n                ...state,\n                game: false,\n                attempts: temp,\n                possibleSong: null,\n                computerWon: true\n            }\n        }\n        case 'FINISH_GAME': {\n            return {\n                ...state,\n                attempts: [],\n                computerWon: false,\n                userWon: false\n            }\n        }\n        case 'UPDATE_USER_SCORE': {\n            return {\n                ...state,\n                userScore: state.userScore + 1\n            }\n        }\n        case 'UPDATE_COMPUTER_SCORE': {\n            return {\n                ...state,\n                computerScore: state.computerScore + 1\n            }\n        }\n        case 'TOGGLE_SPINNER': {\n            return {\n                ...state,\n                spinner: !state.spinner\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/red_vinyl.b1b8ca01.png\";","module.exports = __webpack_public_path__ + \"static/media/yellow_vinyl.79ca906c.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_vinyl.9929ef7c.png\";","module.exports = __webpack_public_path__ + \"static/media/introduction.df399d12.png\";","module.exports = __webpack_public_path__ + \"static/media/search.27cd5468.png\";","module.exports = __webpack_public_path__ + \"static/media/audio.b5983980.png\";","module.exports = __webpack_public_path__ + \"static/media/text.ae1ade9b.png\";"],"sourceRoot":""}